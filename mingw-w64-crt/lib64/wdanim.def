; 
; Exports of file DANIM.dll
;
; Autogenerated by gen_exportdef
; Written by Kai Tietz, 2007
;
LIBRARY DANIM.dll
EXPORTS
; class CRBvr * __stdcall COMToCRBvr(struct IUnknown *)
?COMToCRBvr@@YGPAVCRBvr@@PAUIUnknown@@@Z
; class CRNumber * __stdcall CRAbs(class CRNumber *)
?CRAbs@@YGPAVCRNumber@@PAV1@@Z
; class CRNumber * __stdcall CRAcos(class CRNumber *)
?CRAcos@@YGPAVCRNumber@@PAV1@@Z
; bool __stdcall CRAcquireGCLock(void)
?CRAcquireGCLock@@YG_NXZ
; class CRNumber * __stdcall CRAdd(class CRNumber *,class CRNumber *)
?CRAdd@@YGPAVCRNumber@@PAV1@0@Z
; class CRPoint2 * __stdcall CRAdd(class CRPoint2 *,class CRVector2 *)
?CRAdd@@YGPAVCRPoint2@@PAV1@PAVCRVector2@@@Z
; class CRPoint3 * __stdcall CRAdd(class CRPoint3 *,class CRVector3 *)
?CRAdd@@YGPAVCRPoint3@@PAV1@PAVCRVector3@@@Z
; class CRVector2 * __stdcall CRAdd(class CRVector2 *,class CRVector2 *)
?CRAdd@@YGPAVCRVector2@@PAV1@0@Z
; class CRVector3 * __stdcall CRAdd(class CRVector3 *,class CRVector3 *)
?CRAdd@@YGPAVCRVector3@@PAV1@0@Z
; bool __stdcall CRAddBvrToRun(class CRView *,class CRBvr *,bool,long *)
?CRAddBvrToRun@@YG_NPAVCRView@@PAVCRBvr@@_NPAJ@Z
; long __stdcall CRAddElement(class CRArray *,class CRBvr *,unsigned long)
?CRAddElement@@YGJPAVCRArray@@PAVCRBvr@@K@Z
; class CRGeometry * __stdcall CRAddPickData(class CRGeometry *,struct IUnknown *,bool)
?CRAddPickData@@YGPAVCRGeometry@@PAV1@PAUIUnknown@@_N@Z
; class CRImage * __stdcall CRAddPickData(class CRImage *,struct IUnknown *,bool)
?CRAddPickData@@YGPAVCRImage@@PAV1@PAUIUnknown@@_N@Z
; bool __stdcall CRAddRefGC(void *)
?CRAddRefGC@@YG_NPAX@Z
; bool __stdcall CRAddSite(class CRSite *)
?CRAddSite@@YG_NPAVCRSite@@@Z
; class CREvent * __stdcall CRAlways(void)
?CRAlways@@YGPAVCREvent@@XZ
; class CRGeometry * __stdcall CRAmbientColor(class CRGeometry *,class CRColor *)
?CRAmbientColor@@YGPAVCRGeometry@@PAV1@PAVCRColor@@@Z
; class CRGeometry * __stdcall CRAmbientLight(void)
?CRAmbientLight@@YGPAVCRGeometry@@XZ
; class CRBoolean * __stdcall CRAnd(class CRBoolean *,class CRBoolean *)
?CRAnd@@YGPAVCRBoolean@@PAV1@0@Z
; class CREvent * __stdcall CRAndEvent(class CREvent *,class CREvent *)
?CRAndEvent@@YGPAVCREvent@@PAV1@0@Z
; class CRFontStyle * __stdcall CRAntiAliasing(class CRFontStyle *,double)
?CRAntiAliasing@@YGPAVCRFontStyle@@PAV1@N@Z
; class CRLineStyle * __stdcall CRAntiAliasing(class CRLineStyle *,double)
?CRAntiAliasing@@YGPAVCRLineStyle@@PAV1@N@Z
; class CREvent * __stdcall CRAppTriggeredEvent(void)
?CRAppTriggeredEvent@@YGPAVCREvent@@XZ
; class CRDXTransformResult * __stdcall CRApplyDXTransform(struct IUnknown *,long,class CRBvr * *,class CRBvr *)
?CRApplyDXTransform@@YGPAVCRDXTransformResult@@PAUIUnknown@@JPAPAVCRBvr@@PAV3@@Z
; class CRColor * __stdcall CRAqua(void)
?CRAqua@@YGPAVCRColor@@XZ
; class CRPath2 * __stdcall CRArc(double,double,double,double)
?CRArc@@YGPAVCRPath2@@NNNN@Z
; class CRPath2 * __stdcall CRArcRadians(double,double,double,double)
?CRArcRadians@@YGPAVCRPath2@@NNNN@Z
; class CRPath2 * __stdcall CRArcRadians(class CRNumber *,class CRNumber *,class CRNumber *,class CRNumber *)
?CRArcRadians@@YGPAVCRPath2@@PAVCRNumber@@000@Z
; class CRNumber * __stdcall CRAsin(class CRNumber *)
?CRAsin@@YGPAVCRNumber@@PAV1@@Z
; class CRNumber * __stdcall CRAtan2(class CRNumber *,class CRNumber *)
?CRAtan2@@YGPAVCRNumber@@PAV1@0@Z
; class CRNumber * __stdcall CRAtan(class CRNumber *)
?CRAtan@@YGPAVCRNumber@@PAV1@@Z
; class CREvent * __stdcall CRAttachData(class CREvent *,class CRBvr *)
?CRAttachData@@YGPAVCREvent@@PAV1@PAVCRBvr@@@Z
; class CRBvr * __stdcall CRBSpline(int,long,class CRNumber * * const,long,class CRBvr * * const,long,class CRNumber * * const,class CRNumber *,enum CR_BVR_TYPEID)
?CRBSpline@@YGPAVCRBvr@@HJQAPAVCRNumber@@JQAPAV1@J0PAV2@W4CR_BVR_TYPEID@@@Z
; class CRGeometry * __stdcall CRBillboard(class CRGeometry *,class CRVector3 *)
?CRBillboard@@YGPAVCRGeometry@@PAV1@PAVCRVector3@@@Z
; class CRColor * __stdcall CRBlack(void)
?CRBlack@@YGPAVCRColor@@XZ
; class CRGeometry * __stdcall CRBlendTextureDiffuse(class CRGeometry *,class CRBoolean *)
?CRBlendTextureDiffuse@@YGPAVCRGeometry@@PAV1@PAVCRBoolean@@@Z
; class CRColor * __stdcall CRBlue(void)
?CRBlue@@YGPAVCRColor@@XZ
; class CRFontStyle * __stdcall CRBold(class CRFontStyle *)
?CRBold@@YGPAVCRFontStyle@@PAV1@@Z
; class CRBbox2 * __stdcall CRBoundingBox(class CRImage *)
?CRBoundingBox@@YGPAVCRBbox2@@PAVCRImage@@@Z
; class CRBbox2 * __stdcall CRBoundingBox(class CRPath2 *,class CRLineStyle *)
?CRBoundingBox@@YGPAVCRBbox2@@PAVCRPath2@@PAVCRLineStyle@@@Z
; class CRBbox3 * __stdcall CRBoundingBox(class CRGeometry *)
?CRBoundingBox@@YGPAVCRBbox3@@PAVCRGeometry@@@Z
; class CRBvr * __stdcall CRBvrApplyPreference(class CRBvr *,unsigned short *,struct tagVARIANT)
?CRBvrApplyPreference@@YGPAVCRBvr@@PAV1@PAGUtagVARIANT@@@Z
; bool __stdcall CRBvrToCOM(class CRBvr *,struct _GUID const &,void * *)
?CRBvrToCOM@@YG_NPAVCRBvr@@ABU_GUID@@PAPAX@Z
; class CRNumber * __stdcall CRCeiling(class CRNumber *)
?CRCeiling@@YGPAVCRNumber@@PAV1@@Z
; void __stdcall CRClearLastError(void)
?CRClearLastError@@YGXXZ
; class CRMatte * __stdcall CRClearMatte(void)
?CRClearMatte@@YGPAVCRMatte@@XZ
; class CRImage * __stdcall CRClip(class CRImage *,class CRMatte *)
?CRClip@@YGPAVCRImage@@PAV1@PAVCRMatte@@@Z
; class CRImage * __stdcall CRClipPolygonImage(class CRImage *,class CRArray *)
?CRClipPolygonImage@@YGPAVCRImage@@PAV1@PAVCRArray@@@Z
; class CRPath2 * __stdcall CRClose(class CRPath2 *)
?CRClose@@YGPAVCRPath2@@PAV1@@Z
; class CRColor * __stdcall CRColorHsl(double,double,double)
?CRColorHsl@@YGPAVCRColor@@NNN@Z
; class CRColor * __stdcall CRColorHsl(class CRNumber *,class CRNumber *,class CRNumber *)
?CRColorHsl@@YGPAVCRColor@@PAVCRNumber@@00@Z
; class CRImage * __stdcall CRColorKey(class CRImage *,class CRColor *)
?CRColorKey@@YGPAVCRImage@@PAV1@PAVCRColor@@@Z
; class CRColor * __stdcall CRColorRgb255(short,short,short)
?CRColorRgb255@@YGPAVCRColor@@FFF@Z
; class CRColor * __stdcall CRColorRgb(double,double,double)
?CRColorRgb@@YGPAVCRColor@@NNN@Z
; class CRColor * __stdcall CRColorRgb(class CRNumber *,class CRNumber *,class CRNumber *)
?CRColorRgb@@YGPAVCRColor@@PAVCRNumber@@00@Z
; class CRTransform2 * __stdcall CRCompose2(class CRTransform2 *,class CRTransform2 *)
?CRCompose2@@YGPAVCRTransform2@@PAV1@0@Z
; class CRTransform2 * __stdcall CRCompose2(class CRArray *)
?CRCompose2@@YGPAVCRTransform2@@PAVCRArray@@@Z
; class CRTransform3 * __stdcall CRCompose3(class CRTransform3 *,class CRTransform3 *)
?CRCompose3@@YGPAVCRTransform3@@PAV1@0@Z
; class CRTransform3 * __stdcall CRCompose3(class CRArray *)
?CRCompose3@@YGPAVCRTransform3@@PAVCRArray@@@Z
; class CRPath2 * __stdcall CRConcat(class CRPath2 *,class CRPath2 *)
?CRConcat@@YGPAVCRPath2@@PAV1@0@Z
; class CRPath2 * __stdcall CRConcat(class CRArray *)
?CRConcat@@YGPAVCRPath2@@PAVCRArray@@@Z
; class CRString * __stdcall CRConcatString(class CRString *,class CRString *)
?CRConcatString@@YGPAVCRString@@PAV1@0@Z
; class CRBvr * __stdcall CRCond(class CRBoolean *,class CRBvr *,class CRBvr *)
?CRCond@@YGPAVCRBvr@@PAVCRBoolean@@PAV1@1@Z
; bool __stdcall CRConnect(struct HINSTANCE__ *)
?CRConnect@@YG_NPAUHINSTANCE__@@@Z
; class CRNumber * __stdcall CRCos(class CRNumber *)
?CRCos@@YGPAVCRNumber@@PAV1@@Z
; class CRArray * __stdcall CRCreateArray(long,double * const,enum CR_BVR_TYPEID)
?CRCreateArray@@YGPAVCRArray@@JQANW4CR_BVR_TYPEID@@@Z
; class CRArray * __stdcall CRCreateArray(long,class CRBvr * * const,unsigned long)
?CRCreateArray@@YGPAVCRArray@@JQAPAVCRBvr@@K@Z
; class CRBoolean * __stdcall CRCreateBoolean(bool)
?CRCreateBoolean@@YGPAVCRBoolean@@_N@Z
; class CRNumber * __stdcall CRCreateNumber(double)
?CRCreateNumber@@YGPAVCRNumber@@N@Z
; class CRPoint2 * __stdcall CRCreatePoint2(double,double)
?CRCreatePoint2@@YGPAVCRPoint2@@NN@Z
; class CRPoint2 * __stdcall CRCreatePoint2(class CRNumber *,class CRNumber *)
?CRCreatePoint2@@YGPAVCRPoint2@@PAVCRNumber@@0@Z
; class CRPoint3 * __stdcall CRCreatePoint3(double,double,double)
?CRCreatePoint3@@YGPAVCRPoint3@@NNN@Z
; class CRPoint3 * __stdcall CRCreatePoint3(class CRNumber *,class CRNumber *,class CRNumber *)
?CRCreatePoint3@@YGPAVCRPoint3@@PAVCRNumber@@00@Z
; class CRString * __stdcall CRCreateString(unsigned short *)
?CRCreateString@@YGPAVCRString@@PAG@Z
; class CRTuple * __stdcall CRCreateTuple(long,class CRBvr * * const)
?CRCreateTuple@@YGPAVCRTuple@@JQAPAVCRBvr@@@Z
; class CRUserData * __stdcall CRCreateUserData(struct IUnknown *)
?CRCreateUserData@@YGPAVCRUserData@@PAUIUnknown@@@Z
; class CRVector2 * __stdcall CRCreateVector2(double,double)
?CRCreateVector2@@YGPAVCRVector2@@NN@Z
; class CRVector2 * __stdcall CRCreateVector2(class CRNumber *,class CRNumber *)
?CRCreateVector2@@YGPAVCRVector2@@PAVCRNumber@@0@Z
; class CRVector3 * __stdcall CRCreateVector3(double,double,double)
?CRCreateVector3@@YGPAVCRVector3@@NNN@Z
; class CRVector3 * __stdcall CRCreateVector3(class CRNumber *,class CRNumber *,class CRNumber *)
?CRCreateVector3@@YGPAVCRVector3@@PAVCRNumber@@00@Z
; class CRView * __stdcall CRCreateView(void)
?CRCreateView@@YGPAVCRView@@XZ
; class CRImage * __stdcall CRCrop(class CRImage *,class CRPoint2 *,class CRPoint2 *)
?CRCrop@@YGPAVCRImage@@PAV1@PAVCRPoint2@@1@Z
; class CRVector3 * __stdcall CRCross(class CRVector3 *,class CRVector3 *)
?CRCross@@YGPAVCRVector3@@PAV1@0@Z
; class CRPath2 * __stdcall CRCubicBSplinePath(class CRArray *,class CRArray *)
?CRCubicBSplinePath@@YGPAVCRPath2@@PAVCRArray@@0@Z
; class CRColor * __stdcall CRCyan(void)
?CRCyan@@YGPAVCRColor@@XZ
; class CRGeometry * __stdcall CRD3DRMTexture(class CRGeometry *,struct IUnknown *)
?CRD3DRMTexture@@YGPAVCRGeometry@@PAV1@PAUIUnknown@@@Z
; class CRLineStyle * __stdcall CRDash(class CRLineStyle *,class CRDashStyle *)
?CRDash@@YGPAVCRLineStyle@@PAV1@PAVCRDashStyle@@@Z
; class CRLineStyle * __stdcall CRDashEx(class CRLineStyle *,unsigned long)
?CRDashEx@@YGPAVCRLineStyle@@PAV1@K@Z
; class CRDashStyle * __stdcall CRDashStyleDashed(void)
?CRDashStyleDashed@@YGPAVCRDashStyle@@XZ
; class CRDashStyle * __stdcall CRDashStyleSolid(void)
?CRDashStyleSolid@@YGPAVCRDashStyle@@XZ
; class CRFontStyle * __stdcall CRDefaultFont(void)
?CRDefaultFont@@YGPAVCRFontStyle@@XZ
; class CRLineStyle * __stdcall CRDefaultLineStyle(void)
?CRDefaultLineStyle@@YGPAVCRLineStyle@@XZ
; class CRMicrophone * __stdcall CRDefaultMicrophone(void)
?CRDefaultMicrophone@@YGPAVCRMicrophone@@XZ
; class CRCamera * __stdcall CRDepth(class CRCamera *,double)
?CRDepth@@YGPAVCRCamera@@PAV1@N@Z
; class CRCamera * __stdcall CRDepth(class CRCamera *,class CRNumber *)
?CRDepth@@YGPAVCRCamera@@PAV1@PAVCRNumber@@@Z
; class CRCamera * __stdcall CRDepthResolution(class CRCamera *,double)
?CRDepthResolution@@YGPAVCRCamera@@PAV1@N@Z
; class CRCamera * __stdcall CRDepthResolution(class CRCamera *,class CRNumber *)
?CRDepthResolution@@YGPAVCRCamera@@PAV1@PAVCRNumber@@@Z
; class CRNumber * __stdcall CRDerivative(class CRNumber *)
?CRDerivative@@YGPAVCRNumber@@PAV1@@Z
; class CRVector2 * __stdcall CRDerivative(class CRVector2 *)
?CRDerivative@@YGPAVCRVector2@@PAV1@@Z
; class CRVector2 * __stdcall CRDerivative(class CRPoint2 *)
?CRDerivative@@YGPAVCRVector2@@PAVCRPoint2@@@Z
; class CRVector3 * __stdcall CRDerivative(class CRVector3 *)
?CRDerivative@@YGPAVCRVector3@@PAV1@@Z
; class CRVector3 * __stdcall CRDerivative(class CRPoint3 *)
?CRDerivative@@YGPAVCRVector3@@PAVCRPoint3@@@Z
; void __stdcall CRDestroyView(class CRView *)
?CRDestroyView@@YGXPAVCRView@@@Z
; class CRLineStyle * __stdcall CRDetail(class CRLineStyle *)
?CRDetail@@YGPAVCRLineStyle@@PAV1@@Z
; class CRImage * __stdcall CRDetectableEmptyImage(void)
?CRDetectableEmptyImage@@YGPAVCRImage@@XZ
; class CRMatte * __stdcall CRDifferenceMatte(class CRMatte *,class CRMatte *)
?CRDifferenceMatte@@YGPAVCRMatte@@PAV1@0@Z
; class CRGeometry * __stdcall CRDiffuseColor(class CRGeometry *,class CRColor *)
?CRDiffuseColor@@YGPAVCRGeometry@@PAV1@PAVCRColor@@@Z
; class CRGeometry * __stdcall CRDirectionalLight(void)
?CRDirectionalLight@@YGPAVCRGeometry@@XZ
; bool __stdcall CRDisconnect(struct HINSTANCE__ *)
?CRDisconnect@@YG_NPAUHINSTANCE__@@@Z
; class CRNumber * __stdcall CRDistance(class CRPoint2 *,class CRPoint2 *)
?CRDistance@@YGPAVCRNumber@@PAVCRPoint2@@0@Z
; class CRNumber * __stdcall CRDistance(class CRPoint3 *,class CRPoint3 *)
?CRDistance@@YGPAVCRNumber@@PAVCRPoint3@@0@Z
; class CRNumber * __stdcall CRDistanceSquared(class CRPoint2 *,class CRPoint2 *)
?CRDistanceSquared@@YGPAVCRNumber@@PAVCRPoint2@@0@Z
; class CRNumber * __stdcall CRDistanceSquared(class CRPoint3 *,class CRPoint3 *)
?CRDistanceSquared@@YGPAVCRNumber@@PAVCRPoint3@@0@Z
; class CRNumber * __stdcall CRDiv(class CRNumber *,class CRNumber *)
?CRDiv@@YGPAVCRNumber@@PAV1@0@Z
; class CRVector2 * __stdcall CRDiv(class CRVector2 *,double)
?CRDiv@@YGPAVCRVector2@@PAV1@N@Z
; class CRVector2 * __stdcall CRDiv(class CRVector2 *,class CRNumber *)
?CRDiv@@YGPAVCRVector2@@PAV1@PAVCRNumber@@@Z
; class CRVector3 * __stdcall CRDiv(class CRVector3 *,double)
?CRDiv@@YGPAVCRVector3@@PAV1@N@Z
; class CRVector3 * __stdcall CRDiv(class CRVector3 *,class CRNumber *)
?CRDiv@@YGPAVCRVector3@@PAV1@PAVCRNumber@@@Z
; bool __stdcall CRDoGC(void)
?CRDoGC@@YG_NXZ
; class CRNumber * __stdcall CRDot(class CRVector2 *,class CRVector2 *)
?CRDot@@YGPAVCRNumber@@PAVCRVector2@@0@Z
; class CRNumber * __stdcall CRDot(class CRVector3 *,class CRVector3 *)
?CRDot@@YGPAVCRNumber@@PAVCRVector3@@0@Z
; class CRImage * __stdcall CRDraw(class CRPath2 *,class CRLineStyle *)
?CRDraw@@YGPAVCRImage@@PAVCRPath2@@PAVCRLineStyle@@@Z
; class CRBvr * __stdcall CRDuration(class CRBvr *,double)
?CRDuration@@YGPAVCRBvr@@PAV1@N@Z
; class CRBvr * __stdcall CRDuration(class CRBvr *,class CRNumber *)
?CRDuration@@YGPAVCRBvr@@PAV1@PAVCRNumber@@@Z
; class CRBoolean * __stdcall CREQ(class CRNumber *,class CRNumber *)
?CREQ@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CRGeometry * __stdcall CREmissiveColor(class CRGeometry *,class CRColor *)
?CREmissiveColor@@YGPAVCRGeometry@@PAV1@PAVCRColor@@@Z
; class CRColor * __stdcall CREmptyColor(void)
?CREmptyColor@@YGPAVCRColor@@XZ
; class CRGeometry * __stdcall CREmptyGeometry(void)
?CREmptyGeometry@@YGPAVCRGeometry@@XZ
; class CRImage * __stdcall CREmptyImage(void)
?CREmptyImage@@YGPAVCRImage@@XZ
; class CRLineStyle * __stdcall CREmptyLineStyle(void)
?CREmptyLineStyle@@YGPAVCRLineStyle@@XZ
; class CRMontage * __stdcall CREmptyMontage(void)
?CREmptyMontage@@YGPAVCRMontage@@XZ
; class CRLineStyle * __stdcall CREnd(class CRLineStyle *,class CREndStyle *)
?CREnd@@YGPAVCRLineStyle@@PAV1@PAVCREndStyle@@@Z
; class CRBvr * __stdcall CREndEvent(class CRBvr *)
?CREndEvent@@YGPAVCRBvr@@PAV1@@Z
; class CRLineStyle * __stdcall CREndEx(class CRLineStyle *,unsigned long)
?CREndEx@@YGPAVCRLineStyle@@PAV1@K@Z
; class CREndStyle * __stdcall CREndStyleFlat(void)
?CREndStyleFlat@@YGPAVCREndStyle@@XZ
; class CREndStyle * __stdcall CREndStyleRound(void)
?CREndStyleRound@@YGPAVCREndStyle@@XZ
; class CREndStyle * __stdcall CREndStyleSquare(void)
?CREndStyleSquare@@YGPAVCREndStyle@@XZ
; class CRNumber * __stdcall CRExp(class CRNumber *)
?CRExp@@YGPAVCRNumber@@PAV1@@Z
; class CRBvr * __stdcall CRExtendedAttrib(class CRBvr *,unsigned short *,struct tagVARIANT)
?CRExtendedAttrib@@YGPAVCRBvr@@PAV1@PAGUtagVARIANT@@@Z
; double __stdcall CRExtract(class CRNumber *)
?CRExtract@@YGNPAVCRNumber@@@Z
; unsigned short * __stdcall CRExtract(class CRString *)
?CRExtract@@YGPAGPAVCRString@@@Z
; bool __stdcall CRExtract(class CRBoolean *)
?CRExtract@@YG_NPAVCRBoolean@@@Z
; class CRBoolean * __stdcall CRFalse(void)
?CRFalse@@YGPAVCRBoolean@@XZ
; class CRFontStyle * __stdcall CRFamily(class CRFontStyle *,unsigned short *)
?CRFamily@@YGPAVCRFontStyle@@PAV1@PAG@Z
; class CRFontStyle * __stdcall CRFamily(class CRFontStyle *,class CRString *)
?CRFamily@@YGPAVCRFontStyle@@PAV1@PAVCRString@@@Z
; class CRImage * __stdcall CRFill(class CRPath2 *,class CRLineStyle *,class CRImage *)
?CRFill@@YGPAVCRImage@@PAVCRPath2@@PAVCRLineStyle@@PAV1@@Z
; class CRMatte * __stdcall CRFillMatte(class CRPath2 *)
?CRFillMatte@@YGPAVCRMatte@@PAVCRPath2@@@Z
; class CRBvr * __stdcall CRFirst(class CRPair *)
?CRFirst@@YGPAVCRBvr@@PAVCRPair@@@Z
; class CRNumber * __stdcall CRFloor(class CRNumber *)
?CRFloor@@YGPAVCRNumber@@PAV1@@Z
; class CRTransform2 * __stdcall CRFollowPath(class CRPath2 *,double)
?CRFollowPath@@YGPAVCRTransform2@@PAVCRPath2@@N@Z
; class CRTransform2 * __stdcall CRFollowPath(class CRPath2 *,class CRNumber *)
?CRFollowPath@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRFollowPathAngle(class CRPath2 *,double)
?CRFollowPathAngle@@YGPAVCRTransform2@@PAVCRPath2@@N@Z
; class CRTransform2 * __stdcall CRFollowPathAngle(class CRPath2 *,class CRNumber *)
?CRFollowPathAngle@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRFollowPathAngleEval(class CRPath2 *,class CRNumber *)
?CRFollowPathAngleEval@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRFollowPathAngleUpright(class CRPath2 *,double)
?CRFollowPathAngleUpright@@YGPAVCRTransform2@@PAVCRPath2@@N@Z
; class CRTransform2 * __stdcall CRFollowPathAngleUpright(class CRPath2 *,class CRNumber *)
?CRFollowPathAngleUpright@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRFollowPathAngleUprightEval(class CRPath2 *,class CRNumber *)
?CRFollowPathAngleUprightEval@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRFollowPathEval(class CRPath2 *,class CRNumber *)
?CRFollowPathEval@@YGPAVCRTransform2@@PAVCRPath2@@PAVCRNumber@@@Z
; class CRFontStyle * __stdcall CRFont(unsigned short *,double,class CRColor *)
?CRFont@@YGPAVCRFontStyle@@PAGNPAVCRColor@@@Z
; class CRFontStyle * __stdcall CRFont(class CRString *,class CRNumber *,class CRColor *)
?CRFont@@YGPAVCRFontStyle@@PAVCRString@@PAVCRNumber@@PAVCRColor@@@Z
; class CRColor * __stdcall CRFuchsia(void)
?CRFuchsia@@YGPAVCRColor@@XZ
; class CRBoolean * __stdcall CRGT(class CRNumber *,class CRNumber *)
?CRGT@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CRBoolean * __stdcall CRGTE(class CRNumber *,class CRNumber *)
?CRGTE@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CRSound * __stdcall CRGain(class CRSound *,double)
?CRGain@@YGPAVCRSound@@PAV1@N@Z
; class CRSound * __stdcall CRGain(class CRSound *,class CRNumber *)
?CRGain@@YGPAVCRSound@@PAV1@PAVCRNumber@@@Z
; enum CR_BVR_TYPEID  __stdcall CRGetArrayTypeId(class CRBvr *)
?CRGetArrayTypeId@@YG?AW4CR_BVR_TYPEID@@PAVCRBvr@@@Z
; class CRNumber * __stdcall CRGetBlue(class CRColor *)
?CRGetBlue@@YGPAVCRNumber@@PAVCRColor@@@Z
; class CREvent * __stdcall CRGetCompletionEvent(class CRImportationResult *)
?CRGetCompletionEvent@@YGPAVCREvent@@PAVCRImportationResult@@@Z
; bool __stdcall CRGetCompositeDirectlyToTarget(class CRView *)
?CRGetCompositeDirectlyToTarget@@YG_NPAVCRView@@@Z
; double __stdcall CRGetConstDuration(class CREvent *)
?CRGetConstDuration@@YGNPAVCREvent@@@Z
; struct HDC__ * __stdcall CRGetDC(class CRView *)
?CRGetDC@@YGPAUHDC__@@PAVCRView@@@Z
; bool __stdcall CRGetDDD3DRM(class CRView *,struct IUnknown * *,struct IUnknown * *)
?CRGetDDD3DRM@@YG_NPAVCRView@@PAPAUIUnknown@@1@Z
; struct IUnknown * __stdcall CRGetData(class CRUserData *)
?CRGetData@@YGPAUIUnknown@@PAVCRUserData@@@Z
; struct IUnknown * __stdcall CRGetDirectDrawSurface(class CRView *)
?CRGetDirectDrawSurface@@YGPAUIUnknown@@PAVCRView@@@Z
; class CRNumber * __stdcall CRGetDuration(class CRImportationResult *)
?CRGetDuration@@YGPAVCRNumber@@PAVCRImportationResult@@@Z
; class CRBvr * __stdcall CRGetElement(class CRArray *,long)
?CRGetElement@@YGPAVCRBvr@@PAVCRArray@@J@Z
; class CREvent * __stdcall CRGetEvent(class CRPickableResult *)
?CRGetEvent@@YGPAVCREvent@@PAVCRPickableResult@@@Z
; class CRGeometry * __stdcall CRGetGeometry(class CRImportationResult *)
?CRGetGeometry@@YGPAVCRGeometry@@PAVCRImportationResult@@@Z
; class CRGeometry * __stdcall CRGetGeometry(class CRPickableResult *)
?CRGetGeometry@@YGPAVCRGeometry@@PAVCRPickableResult@@@Z
; class CRNumber * __stdcall CRGetGreen(class CRColor *)
?CRGetGreen@@YGPAVCRNumber@@PAVCRColor@@@Z
; class CRNumber * __stdcall CRGetHue(class CRColor *)
?CRGetHue@@YGPAVCRNumber@@PAVCRColor@@@Z
; class CRImage * __stdcall CRGetImage(class CRImportationResult *)
?CRGetImage@@YGPAVCRImage@@PAVCRImportationResult@@@Z
; class CRImage * __stdcall CRGetImage(class CRPickableResult *)
?CRGetImage@@YGPAVCRImage@@PAVCRPickableResult@@@Z
; float __stdcall CRGetImportPriority(class CRBvr *)
?CRGetImportPriority@@YGMPAVCRBvr@@@Z
; long __stdcall CRGetInvalidatedRects(class CRView *,unsigned long,long,struct tagRECT *)
?CRGetInvalidatedRects@@YGJPAVCRView@@KJPAUtagRECT@@@Z
; long __stdcall CRGetLastError(void)
?CRGetLastError@@YGJXZ
; unsigned short const * __stdcall CRGetLastErrorString(void)
?CRGetLastErrorString@@YGPBGXZ
; class CRNumber * __stdcall CRGetLightness(class CRColor *)
?CRGetLightness@@YGPAVCRNumber@@PAVCRColor@@@Z
; class CRBvr * __stdcall CRGetModifiableBvr(class CRBvr *)
?CRGetModifiableBvr@@YGPAVCRBvr@@PAV1@@Z
; class CRBvr * __stdcall CRGetOutputBvr(class CRDXTransformResult *)
?CRGetOutputBvr@@YGPAVCRBvr@@PAVCRDXTransformResult@@@Z
; bool __stdcall CRGetPreference(class CRView *,unsigned short *,struct tagVARIANT *)
?CRGetPreference@@YG_NPAVCRView@@PAGPAUtagVARIANT@@@Z
; class CRNumber * __stdcall CRGetProgress(class CRImportationResult *)
?CRGetProgress@@YGPAVCRNumber@@PAVCRImportationResult@@@Z
; bool __stdcall CRGetRMDevice(class CRView *,struct IUnknown * *,unsigned long *)
?CRGetRMDevice@@YG_NPAVCRView@@PAPAUIUnknown@@PAK@Z
; class CRNumber * __stdcall CRGetRed(class CRColor *)
?CRGetRed@@YGPAVCRNumber@@PAVCRColor@@@Z
; class CRNumber * __stdcall CRGetSaturation(class CRColor *)
?CRGetSaturation@@YGPAVCRNumber@@PAVCRColor@@@Z
; struct IServiceProvider * __stdcall CRGetServiceProvider(class CRView *)
?CRGetServiceProvider@@YGPAUIServiceProvider@@PAVCRView@@@Z
; double __stdcall CRGetSimulationTime(class CRView *)
?CRGetSimulationTime@@YGNPAVCRView@@@Z
; class CRViewSite * __stdcall CRGetSite(class CRView *)
?CRGetSite@@YGPAVCRViewSite@@PAVCRView@@@Z
; class CRNumber * __stdcall CRGetSize(class CRImportationResult *)
?CRGetSize@@YGPAVCRNumber@@PAVCRImportationResult@@@Z
; class CRSound * __stdcall CRGetSound(class CRImportationResult *)
?CRGetSound@@YGPAVCRSound@@PAVCRImportationResult@@@Z
; struct IUnknown * __stdcall CRGetTransform(class CRDXTransformResult *)
?CRGetTransform@@YGPAUIUnknown@@PAVCRDXTransformResult@@@Z
; enum CR_BVR_TYPEID  __stdcall CRGetTypeId(class CRBvr *)
?CRGetTypeId@@YG?AW4CR_BVR_TYPEID@@PAVCRBvr@@@Z
; struct HWND__ * __stdcall CRGetWindow(class CRView *)
?CRGetWindow@@YGPAUHWND__@@PAVCRView@@@Z
; class CRNumber * __stdcall CRGetX(class CRPoint2 *)
?CRGetX@@YGPAVCRNumber@@PAVCRPoint2@@@Z
; class CRNumber * __stdcall CRGetX(class CRPoint3 *)
?CRGetX@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRGetX(class CRVector2 *)
?CRGetX@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRNumber * __stdcall CRGetX(class CRVector3 *)
?CRGetX@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRGetY(class CRPoint2 *)
?CRGetY@@YGPAVCRNumber@@PAVCRPoint2@@@Z
; class CRNumber * __stdcall CRGetY(class CRPoint3 *)
?CRGetY@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRGetY(class CRVector2 *)
?CRGetY@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRNumber * __stdcall CRGetY(class CRVector3 *)
?CRGetY@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRGetZ(class CRPoint3 *)
?CRGetZ@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRGetZ(class CRVector3 *)
?CRGetZ@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRGlobalTime(void)
?CRGlobalTime@@YGPAVCRNumber@@XZ
; class CRImage * __stdcall CRGradientHorizontal(class CRColor *,class CRColor *,double)
?CRGradientHorizontal@@YGPAVCRImage@@PAVCRColor@@0N@Z
; class CRImage * __stdcall CRGradientHorizontal(class CRColor *,class CRColor *,class CRNumber *)
?CRGradientHorizontal@@YGPAVCRImage@@PAVCRColor@@0PAVCRNumber@@@Z
; class CRImage * __stdcall CRGradientPolygon(class CRArray *,class CRArray *)
?CRGradientPolygon@@YGPAVCRImage@@PAVCRArray@@0@Z
; class CRImage * __stdcall CRGradientSquare(class CRColor *,class CRColor *,class CRColor *,class CRColor *)
?CRGradientSquare@@YGPAVCRImage@@PAVCRColor@@000@Z
; class CRColor * __stdcall CRGray(void)
?CRGray@@YGPAVCRColor@@XZ
; class CRColor * __stdcall CRGreen(void)
?CRGreen@@YGPAVCRColor@@XZ
; class CRImage * __stdcall CRHatchBackwardDiagonal(class CRColor *,double)
?CRHatchBackwardDiagonal@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchBackwardDiagonal(class CRColor *,class CRNumber *)
?CRHatchBackwardDiagonal@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRHatchCross(class CRColor *,double)
?CRHatchCross@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchCross(class CRColor *,class CRNumber *)
?CRHatchCross@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRHatchDiagonalCross(class CRColor *,double)
?CRHatchDiagonalCross@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchDiagonalCross(class CRColor *,class CRNumber *)
?CRHatchDiagonalCross@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRHatchForwardDiagonal(class CRColor *,double)
?CRHatchForwardDiagonal@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchForwardDiagonal(class CRColor *,class CRNumber *)
?CRHatchForwardDiagonal@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRHatchHorizontal(class CRColor *,double)
?CRHatchHorizontal@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchHorizontal(class CRColor *,class CRNumber *)
?CRHatchHorizontal@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRHatchVertical(class CRColor *,double)
?CRHatchVertical@@YGPAVCRImage@@PAVCRColor@@N@Z
; class CRImage * __stdcall CRHatchVertical(class CRColor *,class CRNumber *)
?CRHatchVertical@@YGPAVCRImage@@PAVCRColor@@PAVCRNumber@@@Z
; class CRBvr * __stdcall CRHook(class CRBvr *,class CRBvrHook *)
?CRHook@@YGPAVCRBvr@@PAV1@PAVCRBvrHook@@@Z
; class CRTransform2 * __stdcall CRIdentityTransform2(void)
?CRIdentityTransform2@@YGPAVCRTransform2@@XZ
; class CRTransform3 * __stdcall CRIdentityTransform3(void)
?CRIdentityTransform3@@YGPAVCRTransform3@@XZ
; class CRMontage * __stdcall CRImageMontage(class CRImage *,double)
?CRImageMontage@@YGPAVCRMontage@@PAVCRImage@@N@Z
; class CRMontage * __stdcall CRImageMontageAnim(class CRImage *,class CRNumber *)
?CRImageMontageAnim@@YGPAVCRMontage@@PAVCRImage@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRImageQuality(class CRImage *,unsigned long)
?CRImageQuality@@YGPAVCRImage@@PAV1@K@Z
; bool __stdcall CRImportCancel(class CRBvr *)
?CRImportCancel@@YG_NPAVCRBvr@@@Z
; class CRGeometry * __stdcall CRImportDirect3DRMVisual(struct IUnknown *)
?CRImportDirect3DRMVisual@@YGPAVCRGeometry@@PAUIUnknown@@@Z
; class CRGeometry * __stdcall CRImportDirect3DRMVisualWrapped(struct IUnknown *,long,double,double,double,double,double,double,double,double,double,double,double,double,double,unsigned long)
?CRImportDirect3DRMVisualWrapped@@YGPAVCRGeometry@@PAUIUnknown@@JNNNNNNNNNNNNNK@Z
; class CRImage * __stdcall CRImportDirectDrawSurface(struct IUnknown *,class CREvent *)
?CRImportDirectDrawSurface@@YGPAVCRImage@@PAUIUnknown@@PAVCREvent@@@Z
; unsigned long __stdcall CRImportGeometry(unsigned short const *,unsigned short const *,class CRImportSite *,struct IBindHost *,class CRGeometry *,class CRGeometry * *,class CREvent * *,class CRNumber * *,class CRNumber * *)
?CRImportGeometry@@YGKPBG0PAVCRImportSite@@PAUIBindHost@@PAVCRGeometry@@PAPAV3@PAPAVCREvent@@PAPAVCRNumber@@6@Z
; unsigned long __stdcall CRImportGeometryWrapped(unsigned short const *,unsigned short const *,class CRImportSite *,struct IBindHost *,class CRGeometry *,class CRGeometry * *,class CREvent * *,class CRNumber * *,class CRNumber * *,long,double,double,double,double,double,double,double,double,double,double,double,double,double,unsigned long)
?CRImportGeometryWrapped@@YGKPBG0PAVCRImportSite@@PAUIBindHost@@PAVCRGeometry@@PAPAV3@PAPAVCREvent@@PAPAVCRNumber@@6JNNNNNNNNNNNNNK@Z
; unsigned long __stdcall CRImportImage(unsigned short const *,unsigned short const *,class CRImportSite *,struct IBindHost *,bool,unsigned char,unsigned char,unsigned char,class CRImage *,class CRImage * *,class CREvent * *,class CRNumber * *,class CRNumber * *)
?CRImportImage@@YGKPBG0PAVCRImportSite@@PAUIBindHost@@_NEEEPAVCRImage@@PAPAV3@PAPAVCREvent@@PAPAVCRNumber@@7@Z
; class CRImportationResult * __stdcall CRImportMedia(unsigned short *,void *,enum CR_MEDIA_SOURCE,void * * const,unsigned long,class CRImportSite *)
?CRImportMedia@@YGPAVCRImportationResult@@PAGPAXW4CR_MEDIA_SOURCE@@QAPAXKPAVCRImportSite@@@Z
; unsigned long __stdcall CRImportMovie(unsigned short const *,unsigned short const *,class CRImportSite *,struct IBindHost *,bool,class CRImage *,class CRSound *,class CRImage * *,class CRSound * *,class CRNumber * *,class CREvent * *,class CRNumber * *,class CRNumber * *)
?CRImportMovie@@YGKPBG0PAVCRImportSite@@PAUIBindHost@@_NPAVCRImage@@PAVCRSound@@PAPAV3@PAPAV4@PAPAVCRNumber@@PAPAVCREvent@@88@Z
; unsigned long __stdcall CRImportSound(unsigned short const *,unsigned short const *,class CRImportSite *,struct IBindHost *,bool,class CRSound *,class CRSound * *,class CRNumber * *,class CREvent * *,class CRNumber * *,class CRNumber * *)
?CRImportSound@@YGKPBG0PAVCRImportSite@@PAUIBindHost@@_NPAVCRSound@@PAPAV3@PAPAVCRNumber@@PAPAVCREvent@@66@Z
; long __stdcall CRImportStatus(class CRBvr *)
?CRImportStatus@@YGJPAVCRBvr@@@Z
; class CRBvr * __stdcall CRImportance(class CRBvr *,double)
?CRImportance@@YGPAVCRBvr@@PAV1@N@Z
; bool __stdcall CRInit(class CRBvr *,class CRBvr *)
?CRInit@@YG_NPAVCRBvr@@0@Z
; class CRNumber * __stdcall CRIntegral(class CRNumber *)
?CRIntegral@@YGPAVCRNumber@@PAV1@@Z
; class CRVector2 * __stdcall CRIntegral(class CRVector2 *)
?CRIntegral@@YGPAVCRVector2@@PAV1@@Z
; class CRVector3 * __stdcall CRIntegral(class CRVector3 *)
?CRIntegral@@YGPAVCRVector3@@PAV1@@Z
; class CRNumber * __stdcall CRInterpolate(double,double,double)
?CRInterpolate@@YGPAVCRNumber@@NNN@Z
; class CRNumber * __stdcall CRInterpolate(class CRNumber *,class CRNumber *,class CRNumber *)
?CRInterpolate@@YGPAVCRNumber@@PAV1@00@Z
; class CRMatte * __stdcall CRIntersectMatte(class CRMatte *,class CRMatte *)
?CRIntersectMatte@@YGPAVCRMatte@@PAV1@0@Z
; class CRTransform2 * __stdcall CRInverse(class CRTransform2 *)
?CRInverse@@YGPAVCRTransform2@@PAV1@@Z
; class CRTransform3 * __stdcall CRInverse(class CRTransform3 *)
?CRInverse@@YGPAVCRTransform3@@PAV1@@Z
; bool __stdcall CRIsConnected(struct HINSTANCE__ *)
?CRIsConnected@@YG_NPAUHINSTANCE__@@@Z
; bool __stdcall CRIsConstantBvr(class CRBvr *)
?CRIsConstantBvr@@YG_NPAVCRBvr@@@Z
; bool __stdcall CRIsImport(class CRBvr *)
?CRIsImport@@YG_NPAVCRBvr@@@Z
; bool __stdcall CRIsModifiableBvr(class CRBvr *)
?CRIsModifiableBvr@@YG_NPAVCRBvr@@@Z
; bool __stdcall CRIsReady(class CRBvr *,bool)
?CRIsReady@@YG_NPAVCRBvr@@_N@Z
; class CRBoolean * __stdcall CRIsSingular(class CRTransform2 *)
?CRIsSingular@@YGPAVCRBoolean@@PAVCRTransform2@@@Z
; class CRBoolean * __stdcall CRIsSingular(class CRTransform3 *)
?CRIsSingular@@YGPAVCRBoolean@@PAVCRTransform3@@@Z
; class CRFontStyle * __stdcall CRItalic(class CRFontStyle *)
?CRItalic@@YGPAVCRFontStyle@@PAV1@@Z
; class CRLineStyle * __stdcall CRJoin(class CRLineStyle *,class CRJoinStyle *)
?CRJoin@@YGPAVCRLineStyle@@PAV1@PAVCRJoinStyle@@@Z
; class CRLineStyle * __stdcall CRJoinEx(class CRLineStyle *,unsigned long)
?CRJoinEx@@YGPAVCRLineStyle@@PAV1@K@Z
; class CRJoinStyle * __stdcall CRJoinStyleBevel(void)
?CRJoinStyleBevel@@YGPAVCRJoinStyle@@XZ
; class CRJoinStyle * __stdcall CRJoinStyleMiter(void)
?CRJoinStyleMiter@@YGPAVCRJoinStyle@@XZ
; class CRJoinStyle * __stdcall CRJoinStyleRound(void)
?CRJoinStyleRound@@YGPAVCRJoinStyle@@XZ
; class CREvent * __stdcall CRKeyDown(long)
?CRKeyDown@@YGPAVCREvent@@J@Z
; class CRBoolean * __stdcall CRKeyState(class CRNumber *)
?CRKeyState@@YGPAVCRBoolean@@PAVCRNumber@@@Z
; class CREvent * __stdcall CRKeyUp(long)
?CRKeyUp@@YGPAVCREvent@@J@Z
; class CRBoolean * __stdcall CRLT(class CRNumber *,class CRNumber *)
?CRLT@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CRBoolean * __stdcall CRLTE(class CRNumber *,class CRNumber *)
?CRLTE@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CREvent * __stdcall CRLeftButtonDown(void)
?CRLeftButtonDown@@YGPAVCREvent@@XZ
; class CRBoolean * __stdcall CRLeftButtonState(void)
?CRLeftButtonState@@YGPAVCRBoolean@@XZ
; class CREvent * __stdcall CRLeftButtonUp(void)
?CRLeftButtonUp@@YGPAVCREvent@@XZ
; long __stdcall CRLength(class CRTuple *)
?CRLength@@YGJPAVCRTuple@@@Z
; class CRNumber * __stdcall CRLength(class CRArray *)
?CRLength@@YGPAVCRNumber@@PAVCRArray@@@Z
; class CRNumber * __stdcall CRLength(class CRVector2 *)
?CRLength@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRNumber * __stdcall CRLength(class CRVector3 *)
?CRLength@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRLengthSquared(class CRVector2 *)
?CRLengthSquared@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRNumber * __stdcall CRLengthSquared(class CRVector3 *)
?CRLengthSquared@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRGeometry * __stdcall CRLightAttenuation(class CRGeometry *,double,double,double)
?CRLightAttenuation@@YGPAVCRGeometry@@PAV1@NNN@Z
; class CRGeometry * __stdcall CRLightAttenuation(class CRGeometry *,class CRNumber *,class CRNumber *,class CRNumber *)
?CRLightAttenuation@@YGPAVCRGeometry@@PAV1@PAVCRNumber@@11@Z
; class CRGeometry * __stdcall CRLightColor(class CRGeometry *,class CRColor *)
?CRLightColor@@YGPAVCRGeometry@@PAV1@PAVCRColor@@@Z
; class CRGeometry * __stdcall CRLightRange(class CRGeometry *,double)
?CRLightRange@@YGPAVCRGeometry@@PAV1@N@Z
; class CRGeometry * __stdcall CRLightRange(class CRGeometry *,class CRNumber *)
?CRLightRange@@YGPAVCRGeometry@@PAV1@PAVCRNumber@@@Z
; class CRGeometry * __stdcall CRLighting(class CRGeometry *,class CRBoolean *)
?CRLighting@@YGPAVCRGeometry@@PAV1@PAVCRBoolean@@@Z
; class CRColor * __stdcall CRLime(void)
?CRLime@@YGPAVCRColor@@XZ
; class CRPath2 * __stdcall CRLine(class CRPoint2 *,class CRPoint2 *)
?CRLine@@YGPAVCRPath2@@PAVCRPoint2@@0@Z
; class CRLineStyle * __stdcall CRLineColor(class CRLineStyle *,class CRColor *)
?CRLineColor@@YGPAVCRLineStyle@@PAV1@PAVCRColor@@@Z
; class CRImage * __stdcall CRLinearGradientMulticolor(class CRArray *,class CRArray *)
?CRLinearGradientMulticolor@@YGPAVCRImage@@PAVCRArray@@0@Z
; class CRNumber * __stdcall CRLn(class CRNumber *)
?CRLn@@YGPAVCRNumber@@PAV1@@Z
; class CRNumber * __stdcall CRLocalTime(void)
?CRLocalTime@@YGPAVCRNumber@@XZ
; class CRNumber * __stdcall CRLog10(class CRNumber *)
?CRLog10@@YGPAVCRNumber@@PAV1@@Z
; class CRTransform3 * __stdcall CRLookAtFrom(class CRPoint3 *,class CRPoint3 *,class CRVector3 *)
?CRLookAtFrom@@YGPAVCRTransform3@@PAVCRPoint3@@0PAVCRVector3@@@Z
; class CRSound * __stdcall CRLoop(class CRSound *)
?CRLoop@@YGPAVCRSound@@PAV1@@Z
; class CRColor * __stdcall CRMagenta(void)
?CRMagenta@@YGPAVCRColor@@XZ
; class CRImage * __stdcall CRMapToUnitSquare(class CRImage *)
?CRMapToUnitSquare@@YGPAVCRImage@@PAV1@@Z
; class CRColor * __stdcall CRMaroon(void)
?CRMaroon@@YGPAVCRColor@@XZ
; class CRPoint2 * __stdcall CRMax(class CRBbox2 *)
?CRMax@@YGPAVCRPoint2@@PAVCRBbox2@@@Z
; class CRPoint3 * __stdcall CRMax(class CRBbox3 *)
?CRMax@@YGPAVCRPoint3@@PAVCRBbox3@@@Z
; class CRPoint2 * __stdcall CRMin(class CRBbox2 *)
?CRMin@@YGPAVCRPoint2@@PAVCRBbox2@@@Z
; class CRPoint3 * __stdcall CRMin(class CRBbox3 *)
?CRMin@@YGPAVCRPoint3@@PAVCRBbox3@@@Z
; class CRLineStyle * __stdcall CRMiterLimit(class CRLineStyle *,double)
?CRMiterLimit@@YGPAVCRLineStyle@@PAV1@N@Z
; class CRLineStyle * __stdcall CRMiterLimit(class CRLineStyle *,class CRNumber *)
?CRMiterLimit@@YGPAVCRLineStyle@@PAV1@PAVCRNumber@@@Z
; class CRSound * __stdcall CRMix(class CRSound *,class CRSound *)
?CRMix@@YGPAVCRSound@@PAV1@0@Z
; class CRSound * __stdcall CRMix(class CRArray *)
?CRMix@@YGPAVCRSound@@PAVCRArray@@@Z
; class CRNumber * __stdcall CRMod(class CRNumber *,class CRNumber *)
?CRMod@@YGPAVCRNumber@@PAV1@0@Z
; class CRGeometry * __stdcall CRModelClip(class CRGeometry *,class CRPoint3 *,class CRVector3 *)
?CRModelClip@@YGPAVCRGeometry@@PAV1@PAVCRPoint3@@PAVCRVector3@@@Z
; class CRBvr * __stdcall CRModifiableBvr(class CRBvr *,unsigned long)
?CRModifiableBvr@@YGPAVCRBvr@@PAV1@K@Z
; class CRNumber * __stdcall CRModifiableNumber(double)
?CRModifiableNumber@@YGPAVCRNumber@@N@Z
; class CRString * __stdcall CRModifiableString(unsigned short *)
?CRModifiableString@@YGPAVCRString@@PAG@Z
; class CRPoint2 * __stdcall CRMousePosition(void)
?CRMousePosition@@YGPAVCRPoint2@@XZ
; class CRNumber * __stdcall CRMul(class CRNumber *,class CRNumber *)
?CRMul@@YGPAVCRNumber@@PAV1@0@Z
; class CRVector2 * __stdcall CRMul(class CRVector2 *,double)
?CRMul@@YGPAVCRVector2@@PAV1@N@Z
; class CRVector2 * __stdcall CRMul(class CRVector2 *,class CRNumber *)
?CRMul@@YGPAVCRVector2@@PAV1@PAVCRNumber@@@Z
; class CRVector3 * __stdcall CRMul(class CRVector3 *,double)
?CRMul@@YGPAVCRVector3@@PAV1@N@Z
; class CRVector3 * __stdcall CRMul(class CRVector3 *,class CRNumber *)
?CRMul@@YGPAVCRVector3@@PAV1@PAVCRNumber@@@Z
; class CRBoolean * __stdcall CRNE(class CRNumber *,class CRNumber *)
?CRNE@@YGPAVCRBoolean@@PAVCRNumber@@0@Z
; class CRColor * __stdcall CRNavy(void)
?CRNavy@@YGPAVCRColor@@XZ
; class CRNumber * __stdcall CRNeg(class CRNumber *)
?CRNeg@@YGPAVCRNumber@@PAV1@@Z
; class CRVector2 * __stdcall CRNeg(class CRVector2 *)
?CRNeg@@YGPAVCRVector2@@PAV1@@Z
; class CRVector3 * __stdcall CRNeg(class CRVector3 *)
?CRNeg@@YGPAVCRVector3@@PAV1@@Z
; class CREvent * __stdcall CRNever(void)
?CRNever@@YGPAVCREvent@@XZ
; class CRVector2 * __stdcall CRNormalize(class CRVector2 *)
?CRNormalize@@YGPAVCRVector2@@PAV1@@Z
; class CRVector3 * __stdcall CRNormalize(class CRVector3 *)
?CRNormalize@@YGPAVCRVector3@@PAV1@@Z
; class CRBoolean * __stdcall CRNot(class CRBoolean *)
?CRNot@@YGPAVCRBoolean@@PAV1@@Z
; class CREvent * __stdcall CRNotEvent(class CREvent *)
?CRNotEvent@@YGPAVCREvent@@PAV1@@Z
; class CREvent * __stdcall CRNotify(class CREvent *,class CRUntilNotifier *)
?CRNotify@@YGPAVCREvent@@PAV1@PAVCRUntilNotifier@@@Z
; class CRBvr * __stdcall CRNth(class CRArray *,class CRNumber *)
?CRNth@@YGPAVCRBvr@@PAVCRArray@@PAVCRNumber@@@Z
; class CRBvr * __stdcall CRNth(class CRTuple *,long)
?CRNth@@YGPAVCRBvr@@PAVCRTuple@@J@Z
; class CRColor * __stdcall CROlive(void)
?CROlive@@YGPAVCRColor@@XZ
; bool __stdcall CROnFocus(class CRView *,bool)
?CROnFocus@@YG_NPAVCRView@@_N@Z
; bool __stdcall CROnKey(class CRView *,double,long,bool,unsigned char)
?CROnKey@@YG_NPAVCRView@@NJ_NE@Z
; bool __stdcall CROnMouseButton(class CRView *,double,long,long,unsigned char,bool,unsigned char)
?CROnMouseButton@@YG_NPAVCRView@@NJJE_NE@Z
; bool __stdcall CROnMouseLeave(class CRView *,double)
?CROnMouseLeave@@YG_NPAVCRView@@N@Z
; bool __stdcall CROnMouseMove(class CRView *,double,long,long,unsigned char)
?CROnMouseMove@@YG_NPAVCRView@@NJJE@Z
; class CRGeometry * __stdcall CROpacity(class CRGeometry *,double)
?CROpacity@@YGPAVCRGeometry@@PAV1@N@Z
; class CRGeometry * __stdcall CROpacity(class CRGeometry *,class CRNumber *)
?CROpacity@@YGPAVCRGeometry@@PAV1@PAVCRNumber@@@Z
; class CRImage * __stdcall CROpacity(class CRImage *,double)
?CROpacity@@YGPAVCRImage@@PAV1@N@Z
; class CRImage * __stdcall CROpacity(class CRImage *,class CRNumber *)
?CROpacity@@YGPAVCRImage@@PAV1@PAVCRNumber@@@Z
; class CRMatte * __stdcall CROpaqueMatte(void)
?CROpaqueMatte@@YGPAVCRMatte@@XZ
; class CRBoolean * __stdcall CROr(class CRBoolean *,class CRBoolean *)
?CROr@@YGPAVCRBoolean@@PAV1@0@Z
; class CREvent * __stdcall CROrEvent(class CREvent *,class CREvent *)
?CROrEvent@@YGPAVCREvent@@PAV1@0@Z
; class CRPoint2 * __stdcall CROrigin2(void)
?CROrigin2@@YGPAVCRPoint2@@XZ
; class CRPoint3 * __stdcall CROrigin3(void)
?CROrigin3@@YGPAVCRPoint3@@XZ
; class CRPath2 * __stdcall CROval(double,double)
?CROval@@YGPAVCRPath2@@NN@Z
; class CRPath2 * __stdcall CROval(class CRNumber *,class CRNumber *)
?CROval@@YGPAVCRPath2@@PAVCRNumber@@0@Z
; class CRImage * __stdcall CROverlay(class CRImage *,class CRImage *)
?CROverlay@@YGPAVCRImage@@PAV1@0@Z
; class CRImage * __stdcall CROverlay(class CRArray *)
?CROverlay@@YGPAVCRImage@@PAVCRArray@@@Z
; class CRSound * __stdcall CRPan(class CRSound *,double)
?CRPan@@YGPAVCRSound@@PAV1@N@Z
; class CRSound * __stdcall CRPan(class CRSound *,class CRNumber *)
?CRPan@@YGPAVCRSound@@PAV1@PAVCRNumber@@@Z
; class CRCamera * __stdcall CRParallelCamera(double)
?CRParallelCamera@@YGPAVCRCamera@@N@Z
; class CRCamera * __stdcall CRParallelCameraAnim(class CRNumber *)
?CRParallelCameraAnim@@YGPAVCRCamera@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRParallelTransform2(class CRTransform3 *)
?CRParallelTransform2@@YGPAVCRTransform2@@PAVCRTransform3@@@Z
; bool __stdcall CRPauseModel(class CRView *)
?CRPauseModel@@YG_NPAVCRView@@@Z
; class CRCamera * __stdcall CRPerspectiveCamera(double,double)
?CRPerspectiveCamera@@YGPAVCRCamera@@NN@Z
; class CRCamera * __stdcall CRPerspectiveCameraAnim(class CRNumber *,class CRNumber *)
?CRPerspectiveCameraAnim@@YGPAVCRCamera@@PAVCRNumber@@0@Z
; class CRSound * __stdcall CRPhase(class CRSound *,double)
?CRPhase@@YGPAVCRSound@@PAV1@N@Z
; class CRSound * __stdcall CRPhase(class CRSound *,class CRNumber *)
?CRPhase@@YGPAVCRSound@@PAV1@PAVCRNumber@@@Z
; class CRPickableResult * __stdcall CRPickable(class CRGeometry *)
?CRPickable@@YGPAVCRPickableResult@@PAVCRGeometry@@@Z
; class CRPickableResult * __stdcall CRPickable(class CRImage *)
?CRPickable@@YGPAVCRPickableResult@@PAVCRImage@@@Z
; class CRPickableResult * __stdcall CRPickableOccluded(class CRGeometry *)
?CRPickableOccluded@@YGPAVCRPickableResult@@PAVCRGeometry@@@Z
; class CRPickableResult * __stdcall CRPickableOccluded(class CRImage *)
?CRPickableOccluded@@YGPAVCRPickableResult@@PAVCRImage@@@Z
; class CRPath2 * __stdcall CRPie(double,double,double,double)
?CRPie@@YGPAVCRPath2@@NNNN@Z
; class CRPath2 * __stdcall CRPieRadians(double,double,double,double)
?CRPieRadians@@YGPAVCRPath2@@NNNN@Z
; class CRPath2 * __stdcall CRPieRadians(class CRNumber *,class CRNumber *,class CRNumber *,class CRNumber *)
?CRPieRadians@@YGPAVCRPath2@@PAVCRNumber@@000@Z
; class CRNumber * __stdcall CRPixel(void)
?CRPixel@@YGPAVCRNumber@@XZ
; class CRPoint2 * __stdcall CRPoint2Polar(double,double)
?CRPoint2Polar@@YGPAVCRPoint2@@NN@Z
; class CRPoint2 * __stdcall CRPoint2Polar(class CRNumber *,class CRNumber *)
?CRPoint2Polar@@YGPAVCRPoint2@@PAVCRNumber@@0@Z
; class CRPoint3 * __stdcall CRPoint3Spherical(double,double,double)
?CRPoint3Spherical@@YGPAVCRPoint3@@NNN@Z
; class CRPoint3 * __stdcall CRPoint3Spherical(class CRNumber *,class CRNumber *,class CRNumber *)
?CRPoint3Spherical@@YGPAVCRPoint3@@PAVCRNumber@@00@Z
; class CRGeometry * __stdcall CRPointLight(void)
?CRPointLight@@YGPAVCRGeometry@@XZ
; class CRNumber * __stdcall CRPolarCoordAngle(class CRPoint2 *)
?CRPolarCoordAngle@@YGPAVCRNumber@@PAVCRPoint2@@@Z
; class CRNumber * __stdcall CRPolarCoordAngle(class CRVector2 *)
?CRPolarCoordAngle@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRNumber * __stdcall CRPolarCoordLength(class CRPoint2 *)
?CRPolarCoordLength@@YGPAVCRNumber@@PAVCRPoint2@@@Z
; class CRNumber * __stdcall CRPolarCoordLength(class CRVector2 *)
?CRPolarCoordLength@@YGPAVCRNumber@@PAVCRVector2@@@Z
; class CRPath2 * __stdcall CRPolydrawPath(double *,unsigned int,double *,unsigned int)
?CRPolydrawPath@@YGPAVCRPath2@@PANI0I@Z
; class CRPath2 * __stdcall CRPolydrawPath(class CRArray *,class CRArray *)
?CRPolydrawPath@@YGPAVCRPath2@@PAVCRArray@@0@Z
; class CRPath2 * __stdcall CRPolyline(class CRArray *)
?CRPolyline@@YGPAVCRPath2@@PAVCRArray@@@Z
; class CRNumber * __stdcall CRPow(class CRNumber *,class CRNumber *)
?CRPow@@YGPAVCRNumber@@PAV1@0@Z
; class CREvent * __stdcall CRPredicate(class CRBoolean *)
?CRPredicate@@YGPAVCREvent@@PAVCRBoolean@@@Z
; class CRPoint2 * __stdcall CRProject(class CRPoint3 *,class CRCamera *)
?CRProject@@YGPAVCRPoint2@@PAVCRPoint3@@PAVCRCamera@@@Z
; bool __stdcall CRPropagate(class CRView *)
?CRPropagate@@YG_NPAVCRView@@@Z
; class CRColor * __stdcall CRPurple(void)
?CRPurple@@YGPAVCRColor@@XZ
; bool __stdcall CRPutPreference(class CRView *,unsigned short *,struct tagVARIANT)
?CRPutPreference@@YG_NPAVCRView@@PAGUtagVARIANT@@@Z
; unsigned long __stdcall CRQueryHitPoint(class CRView *,unsigned long,struct tagRECT const *,struct tagPOINT,long)
?CRQueryHitPoint@@YGKPAVCRView@@KPBUtagRECT@@UtagPOINT@@J@Z
; long __stdcall CRQueryHitPointEx(class CRView *,long,unsigned long *,double *,struct tagRECT const *,struct tagPOINT)
?CRQueryHitPointEx@@YGJPAVCRView@@JPAKPANPBUtagRECT@@UtagPOINT@@@Z
; class CRImage * __stdcall CRRadialGradientMulticolor(class CRArray *,class CRArray *)
?CRRadialGradientMulticolor@@YGPAVCRImage@@PAVCRArray@@0@Z
; class CRImage * __stdcall CRRadialGradientPolygon(class CRColor *,class CRColor *,class CRArray *,double)
?CRRadialGradientPolygon@@YGPAVCRImage@@PAVCRColor@@0PAVCRArray@@N@Z
; class CRImage * __stdcall CRRadialGradientPolygon(class CRColor *,class CRColor *,class CRArray *,class CRNumber *)
?CRRadialGradientPolygon@@YGPAVCRImage@@PAVCRColor@@0PAVCRArray@@PAVCRNumber@@@Z
; class CRImage * __stdcall CRRadialGradientRegularPoly(class CRColor *,class CRColor *,double,double)
?CRRadialGradientRegularPoly@@YGPAVCRImage@@PAVCRColor@@0NN@Z
; class CRImage * __stdcall CRRadialGradientRegularPoly(class CRColor *,class CRColor *,class CRNumber *,class CRNumber *)
?CRRadialGradientRegularPoly@@YGPAVCRImage@@PAVCRColor@@0PAVCRNumber@@1@Z
; class CRImage * __stdcall CRRadialGradientSquare(class CRColor *,class CRColor *,double)
?CRRadialGradientSquare@@YGPAVCRImage@@PAVCRColor@@0N@Z
; class CRImage * __stdcall CRRadialGradientSquare(class CRColor *,class CRColor *,class CRNumber *)
?CRRadialGradientSquare@@YGPAVCRImage@@PAVCRColor@@0PAVCRNumber@@@Z
; class CRSound * __stdcall CRRate(class CRSound *,double)
?CRRate@@YGPAVCRSound@@PAV1@N@Z
; class CRSound * __stdcall CRRate(class CRSound *,class CRNumber *)
?CRRate@@YGPAVCRSound@@PAV1@PAVCRNumber@@@Z
; class CRPath2 * __stdcall CRRay(class CRPoint2 *)
?CRRay@@YGPAVCRPath2@@PAVCRPoint2@@@Z
; class CRPath2 * __stdcall CRRect(double,double)
?CRRect@@YGPAVCRPath2@@NN@Z
; class CRPath2 * __stdcall CRRect(class CRNumber *,class CRNumber *)
?CRRect@@YGPAVCRPath2@@PAVCRNumber@@0@Z
; class CRColor * __stdcall CRRed(void)
?CRRed@@YGPAVCRColor@@XZ
; bool __stdcall CRReleaseGC(void *)
?CRReleaseGC@@YG_NPAX@Z
; bool __stdcall CRReleaseGCLock(void)
?CRReleaseGCLock@@YG_NXZ
; bool __stdcall CRRemoveElement(class CRArray *,long)
?CRRemoveElement@@YG_NPAVCRArray@@J@Z
; bool __stdcall CRRemoveRunningBvr(class CRView *,long)
?CRRemoveRunningBvr@@YG_NPAVCRView@@J@Z
; bool __stdcall CRRemoveSite(class CRSite *)
?CRRemoveSite@@YG_NPAVCRSite@@@Z
; class CRImage * __stdcall CRRender(class CRGeometry *,class CRCamera *)
?CRRender@@YGPAVCRImage@@PAVCRGeometry@@PAVCRCamera@@@Z
; class CRImage * __stdcall CRRender(class CRMontage *)
?CRRender@@YGPAVCRImage@@PAVCRMontage@@@Z
; bool __stdcall CRRender(class CRView *)
?CRRender@@YG_NPAVCRView@@@Z
; class CRImage * __stdcall CRRenderResolution(class CRImage *,long,long)
?CRRenderResolution@@YGPAVCRImage@@PAV1@JJ@Z
; class CRSound * __stdcall CRRenderSound(class CRGeometry *,class CRMicrophone *)
?CRRenderSound@@YGPAVCRSound@@PAVCRGeometry@@PAVCRMicrophone@@@Z
; bool __stdcall CRRepaint(class CRView *,long,long,long,long)
?CRRepaint@@YG_NPAVCRView@@JJJJ@Z
; class CRBvr * __stdcall CRRepeat(class CRBvr *,long)
?CRRepeat@@YGPAVCRBvr@@PAV1@J@Z
; class CRBvr * __stdcall CRRepeatForever(class CRBvr *)
?CRRepeatForever@@YGPAVCRBvr@@PAV1@@Z
; bool __stdcall CRResumeModel(class CRView *)
?CRResumeModel@@YG_NPAVCRView@@@Z
; class CREvent * __stdcall CRRightButtonDown(void)
?CRRightButtonDown@@YGPAVCREvent@@XZ
; class CRBoolean * __stdcall CRRightButtonState(void)
?CRRightButtonState@@YGPAVCRBoolean@@XZ
; class CREvent * __stdcall CRRightButtonUp(void)
?CRRightButtonUp@@YGPAVCREvent@@XZ
; class CRTransform2 * __stdcall CRRotate2(double)
?CRRotate2@@YGPAVCRTransform2@@N@Z
; class CRTransform2 * __stdcall CRRotate2(class CRNumber *)
?CRRotate2@@YGPAVCRTransform2@@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRRotate2Degrees(double)
?CRRotate2Degrees@@YGPAVCRTransform2@@N@Z
; class CRTransform3 * __stdcall CRRotate3(class CRVector3 *,double)
?CRRotate3@@YGPAVCRTransform3@@PAVCRVector3@@N@Z
; class CRTransform3 * __stdcall CRRotate3(class CRVector3 *,class CRNumber *)
?CRRotate3@@YGPAVCRTransform3@@PAVCRVector3@@PAVCRNumber@@@Z
; class CRNumber * __stdcall CRRound(class CRNumber *)
?CRRound@@YGPAVCRNumber@@PAV1@@Z
; class CRPath2 * __stdcall CRRoundRect(double,double,double,double)
?CRRoundRect@@YGPAVCRPath2@@NNNN@Z
; class CRPath2 * __stdcall CRRoundRect(class CRNumber *,class CRNumber *,class CRNumber *,class CRNumber *)
?CRRoundRect@@YGPAVCRPath2@@PAVCRNumber@@000@Z
; class CRBvr * __stdcall CRRunOnce(class CRBvr *)
?CRRunOnce@@YGPAVCRBvr@@PAV1@@Z
; class CRBvr * __stdcall CRSampleAtLocalTime(class CRBvr *,double)
?CRSampleAtLocalTime@@YGPAVCRBvr@@PAV1@N@Z
; class CRTransform2 * __stdcall CRScale2(double,double)
?CRScale2@@YGPAVCRTransform2@@NN@Z
; class CRTransform2 * __stdcall CRScale2(class CRNumber *,class CRNumber *)
?CRScale2@@YGPAVCRTransform2@@PAVCRNumber@@0@Z
; class CRTransform2 * __stdcall CRScale2(class CRVector2 *)
?CRScale2@@YGPAVCRTransform2@@PAVCRVector2@@@Z
; class CRTransform2 * __stdcall CRScale2Uniform(double)
?CRScale2Uniform@@YGPAVCRTransform2@@N@Z
; class CRTransform2 * __stdcall CRScale2Uniform(class CRNumber *)
?CRScale2Uniform@@YGPAVCRTransform2@@PAVCRNumber@@@Z
; class CRTransform3 * __stdcall CRScale3(double,double,double)
?CRScale3@@YGPAVCRTransform3@@NNN@Z
; class CRTransform3 * __stdcall CRScale3(class CRNumber *,class CRNumber *,class CRNumber *)
?CRScale3@@YGPAVCRTransform3@@PAVCRNumber@@00@Z
; class CRTransform3 * __stdcall CRScale3(class CRVector3 *)
?CRScale3@@YGPAVCRTransform3@@PAVCRVector3@@@Z
; class CRTransform3 * __stdcall CRScale3Uniform(double)
?CRScale3Uniform@@YGPAVCRTransform3@@N@Z
; class CRTransform3 * __stdcall CRScale3Uniform(class CRNumber *)
?CRScale3Uniform@@YGPAVCRTransform3@@PAVCRNumber@@@Z
; class CRBvr * __stdcall CRSecond(class CRPair *)
?CRSecond@@YGPAVCRBvr@@PAVCRPair@@@Z
; class CRNumber * __stdcall CRSeededRandom(double)
?CRSeededRandom@@YGPAVCRNumber@@N@Z
; class CRBvr * __stdcall CRSequence(class CRBvr *,class CRBvr *)
?CRSequence@@YGPAVCRBvr@@PAV1@0@Z
; class CRBvr * __stdcall CRSequenceArray(long,class CRBvr * * const)
?CRSequenceArray@@YGPAVCRBvr@@JQAPAV1@@Z
; bool __stdcall CRSetBvrAsProperty(class CRDXTransformResult *,unsigned short const *,class CRBvr *)
?CRSetBvrAsProperty@@YG_NPAVCRDXTransformResult@@PBGPAVCRBvr@@@Z
; bool __stdcall CRSetClipRect(class CRView *,long,long,long,long)
?CRSetClipRect@@YG_NPAVCRView@@JJJJ@Z
; bool __stdcall CRSetCompositeDirectlyToTarget(class CRView *,bool)
?CRSetCompositeDirectlyToTarget@@YG_NPAVCRView@@_N@Z
; bool __stdcall CRSetDC(class CRView *,struct HDC__ *)
?CRSetDC@@YG_NPAVCRView@@PAUHDC__@@@Z
; bool __stdcall CRSetDirectDrawSurface(class CRView *,struct IUnknown *)
?CRSetDirectDrawSurface@@YG_NPAVCRView@@PAUIUnknown@@@Z
; bool __stdcall CRSetElement(class CRArray *,long,class CRBvr *,long)
?CRSetElement@@YG_NPAVCRArray@@JPAVCRBvr@@J@Z
; bool __stdcall CRSetImportPriority(class CRBvr *,float)
?CRSetImportPriority@@YG_NPAVCRBvr@@M@Z
; void __stdcall CRSetLastError(long,unsigned short const *)
?CRSetLastError@@YGXJPBG@Z
; bool __stdcall CRSetServiceProvider(class CRView *,struct IServiceProvider *)
?CRSetServiceProvider@@YG_NPAVCRView@@PAUIServiceProvider@@@Z
; bool __stdcall CRSetSite(class CRView *,class CRViewSite *)
?CRSetSite@@YG_NPAVCRView@@PAVCRViewSite@@@Z
; bool __stdcall CRSetViewport(class CRView *,long,long,long,long)
?CRSetViewport@@YG_NPAVCRView@@JJJJ@Z
; bool __stdcall CRSetWindow(class CRView *,struct HWND__ *)
?CRSetWindow@@YG_NPAVCRView@@PAUHWND__@@@Z
; class CRGeometry * __stdcall CRShadow(class CRGeometry *,class CRGeometry *,class CRPoint3 *,class CRVector3 *)
?CRShadow@@YGPAVCRGeometry@@PAV1@0PAVCRPoint3@@PAVCRVector3@@@Z
; class CRSound * __stdcall CRSilence(void)
?CRSilence@@YGPAVCRSound@@XZ
; class CRColor * __stdcall CRSilver(void)
?CRSilver@@YGPAVCRColor@@XZ
; class CRNumber * __stdcall CRSin(class CRNumber *)
?CRSin@@YGPAVCRNumber@@PAV1@@Z
; class CRSound * __stdcall CRSinSynth(void)
?CRSinSynth@@YGPAVCRSound@@XZ
; class CRFontStyle * __stdcall CRSize(class CRFontStyle *,double)
?CRSize@@YGPAVCRFontStyle@@PAV1@N@Z
; class CRFontStyle * __stdcall CRSize(class CRFontStyle *,class CRNumber *)
?CRSize@@YGPAVCRFontStyle@@PAV1@PAVCRNumber@@@Z
; class CRNumber * __stdcall CRSlowInSlowOut(double,double,double,double)
?CRSlowInSlowOut@@YGPAVCRNumber@@NNNN@Z
; class CRNumber * __stdcall CRSlowInSlowOut(class CRNumber *,class CRNumber *,class CRNumber *,class CRNumber *)
?CRSlowInSlowOut@@YGPAVCRNumber@@PAV1@000@Z
; class CREvent * __stdcall CRSnapshot(class CREvent *,class CRBvr *)
?CRSnapshot@@YGPAVCREvent@@PAV1@PAVCRBvr@@@Z
; class CRImage * __stdcall CRSolidColorImage(class CRColor *)
?CRSolidColorImage@@YGPAVCRImage@@PAVCRColor@@@Z
; class CRGeometry * __stdcall CRSoundSource(class CRSound *)
?CRSoundSource@@YGPAVCRGeometry@@PAVCRSound@@@Z
; class CRGeometry * __stdcall CRSpecularColor(class CRGeometry *,class CRColor *)
?CRSpecularColor@@YGPAVCRGeometry@@PAV1@PAVCRColor@@@Z
; class CRGeometry * __stdcall CRSpecularExponent(class CRGeometry *,double)
?CRSpecularExponent@@YGPAVCRGeometry@@PAV1@N@Z
; class CRGeometry * __stdcall CRSpecularExponentAnim(class CRGeometry *,class CRNumber *)
?CRSpecularExponentAnim@@YGPAVCRGeometry@@PAV1@PAVCRNumber@@@Z
; class CRNumber * __stdcall CRSphericalCoordLength(class CRPoint3 *)
?CRSphericalCoordLength@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRSphericalCoordLength(class CRVector3 *)
?CRSphericalCoordLength@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRSphericalCoordXYAngle(class CRPoint3 *)
?CRSphericalCoordXYAngle@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRSphericalCoordXYAngle(class CRVector3 *)
?CRSphericalCoordXYAngle@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRNumber * __stdcall CRSphericalCoordYZAngle(class CRPoint3 *)
?CRSphericalCoordYZAngle@@YGPAVCRNumber@@PAVCRPoint3@@@Z
; class CRNumber * __stdcall CRSphericalCoordYZAngle(class CRVector3 *)
?CRSphericalCoordYZAngle@@YGPAVCRNumber@@PAVCRVector3@@@Z
; class CRGeometry * __stdcall CRSpotLight(class CRNumber *,class CRNumber *)
?CRSpotLight@@YGPAVCRGeometry@@PAVCRNumber@@0@Z
; class CRGeometry * __stdcall CRSpotLight(class CRNumber *,double)
?CRSpotLight@@YGPAVCRGeometry@@PAVCRNumber@@N@Z
; class CRNumber * __stdcall CRSqrt(class CRNumber *)
?CRSqrt@@YGPAVCRNumber@@PAV1@@Z
; bool __stdcall CRStartModel(class CRView *,class CRImage *,class CRSound *,double,unsigned long,bool *)
?CRStartModel@@YG_NPAVCRView@@PAVCRImage@@PAVCRSound@@NKPA_N@Z
; bool __stdcall CRStopModel(class CRView *)
?CRStopModel@@YG_NPAVCRView@@@Z
; class CRFontStyle * __stdcall CRStrikethrough(class CRFontStyle *)
?CRStrikethrough@@YGPAVCRFontStyle@@PAV1@@Z
; class CRImage * __stdcall CRStringImage(unsigned short *,class CRFontStyle *)
?CRStringImage@@YGPAVCRImage@@PAGPAVCRFontStyle@@@Z
; class CRImage * __stdcall CRStringImage(class CRString *,class CRFontStyle *)
?CRStringImage@@YGPAVCRImage@@PAVCRString@@PAVCRFontStyle@@@Z
; class CRPath2 * __stdcall CRStringPath(unsigned short *,class CRFontStyle *)
?CRStringPath@@YGPAVCRPath2@@PAGPAVCRFontStyle@@@Z
; class CRPath2 * __stdcall CRStringPath(class CRString *,class CRFontStyle *)
?CRStringPath@@YGPAVCRPath2@@PAVCRString@@PAVCRFontStyle@@@Z
; class CRNumber * __stdcall CRSub(class CRNumber *,class CRNumber *)
?CRSub@@YGPAVCRNumber@@PAV1@0@Z
; class CRPoint2 * __stdcall CRSub(class CRPoint2 *,class CRVector2 *)
?CRSub@@YGPAVCRPoint2@@PAV1@PAVCRVector2@@@Z
; class CRPoint3 * __stdcall CRSub(class CRPoint3 *,class CRVector3 *)
?CRSub@@YGPAVCRPoint3@@PAV1@PAVCRVector3@@@Z
; class CRVector2 * __stdcall CRSub(class CRVector2 *,class CRVector2 *)
?CRSub@@YGPAVCRVector2@@PAV1@0@Z
; class CRVector2 * __stdcall CRSub(class CRPoint2 *,class CRPoint2 *)
?CRSub@@YGPAVCRVector2@@PAVCRPoint2@@0@Z
; class CRVector3 * __stdcall CRSub(class CRVector3 *,class CRVector3 *)
?CRSub@@YGPAVCRVector3@@PAV1@0@Z
; class CRVector3 * __stdcall CRSub(class CRPoint3 *,class CRPoint3 *)
?CRSub@@YGPAVCRVector3@@PAVCRPoint3@@0@Z
; class CRBvr * __stdcall CRSubstituteTime(class CRBvr *,class CRNumber *)
?CRSubstituteTime@@YGPAVCRBvr@@PAV1@PAVCRNumber@@@Z
; bool __stdcall CRSwitchTo(class CRBvr *,class CRBvr *,bool,unsigned long,double)
?CRSwitchTo@@YG_NPAVCRBvr@@0_NKN@Z
; bool __stdcall CRSwitchToBool(class CRBoolean *,bool)
?CRSwitchToBool@@YG_NPAVCRBoolean@@_N@Z
; bool __stdcall CRSwitchToNumber(class CRNumber *,double)
?CRSwitchToNumber@@YG_NPAVCRNumber@@N@Z
; bool __stdcall CRSwitchToString(class CRString *,unsigned short *)
?CRSwitchToString@@YG_NPAVCRString@@PAG@Z
; class CRNumber * __stdcall CRTan(class CRNumber *)
?CRTan@@YGPAVCRNumber@@PAV1@@Z
; class CRColor * __stdcall CRTeal(void)
?CRTeal@@YGPAVCRColor@@XZ
; class CRFontStyle * __stdcall CRTextColor(class CRFontStyle *,class CRColor *)
?CRTextColor@@YGPAVCRFontStyle@@PAV1@PAVCRColor@@@Z
; class CRImage * __stdcall CRTextImage(unsigned short *,class CRFontStyle *)
?CRTextImage@@YGPAVCRImage@@PAGPAVCRFontStyle@@@Z
; class CRImage * __stdcall CRTextImage(class CRString *,class CRFontStyle *)
?CRTextImage@@YGPAVCRImage@@PAVCRString@@PAVCRFontStyle@@@Z
; class CRMatte * __stdcall CRTextMatte(class CRString *,class CRFontStyle *)
?CRTextMatte@@YGPAVCRMatte@@PAVCRString@@PAVCRFontStyle@@@Z
; class CRPath2 * __stdcall CRTextPath(class CRString *,class CRFontStyle *)
?CRTextPath@@YGPAVCRPath2@@PAVCRString@@PAVCRFontStyle@@@Z
; class CRGeometry * __stdcall CRTexture(class CRGeometry *,class CRImage *)
?CRTexture@@YGPAVCRGeometry@@PAV1@PAVCRImage@@@Z
; class CRGeometry * __stdcall CRTextureImage(class CRGeometry *,class CRImage *)
?CRTextureImage@@YGPAVCRGeometry@@PAV1@PAVCRImage@@@Z
; class CREvent * __stdcall CRThenEvent(class CREvent *,class CREvent *)
?CRThenEvent@@YGPAVCREvent@@PAV1@0@Z
; bool __stdcall CRTick(class CRView *,double,bool *)
?CRTick@@YG_NPAVCRView@@NPA_N@Z
; class CRImage * __stdcall CRTile(class CRImage *)
?CRTile@@YGPAVCRImage@@PAV1@@Z
; class CREvent * __stdcall CRTimer(double)
?CRTimer@@YGPAVCREvent@@N@Z
; class CREvent * __stdcall CRTimer(class CRNumber *)
?CRTimer@@YGPAVCREvent@@PAVCRNumber@@@Z
; class CRNumber * __stdcall CRToDegrees(class CRNumber *)
?CRToDegrees@@YGPAVCRNumber@@PAV1@@Z
; class CRNumber * __stdcall CRToRadians(class CRNumber *)
?CRToRadians@@YGPAVCRNumber@@PAV1@@Z
; class CRString * __stdcall CRToString(class CRNumber *,class CRNumber *)
?CRToString@@YGPAVCRString@@PAVCRNumber@@0@Z
; class CRString * __stdcall CRToString(class CRNumber *,double)
?CRToString@@YGPAVCRString@@PAVCRNumber@@N@Z
; class CRTransform2 * __stdcall CRTransform3x2(double *,unsigned int)
?CRTransform3x2@@YGPAVCRTransform2@@PANI@Z
; class CRTransform2 * __stdcall CRTransform3x2(class CRArray *)
?CRTransform3x2@@YGPAVCRTransform2@@PAVCRArray@@@Z
; class CRTransform3 * __stdcall CRTransform4x4(class CRArray *)
?CRTransform4x4@@YGPAVCRTransform3@@PAVCRArray@@@Z
; class CRCamera * __stdcall CRTransform(class CRCamera *,class CRTransform3 *)
?CRTransform@@YGPAVCRCamera@@PAV1@PAVCRTransform3@@@Z
; class CRGeometry * __stdcall CRTransform(class CRGeometry *,class CRTransform3 *)
?CRTransform@@YGPAVCRGeometry@@PAV1@PAVCRTransform3@@@Z
; class CRImage * __stdcall CRTransform(class CRImage *,class CRTransform2 *)
?CRTransform@@YGPAVCRImage@@PAV1@PAVCRTransform2@@@Z
; class CRMatte * __stdcall CRTransform(class CRMatte *,class CRTransform2 *)
?CRTransform@@YGPAVCRMatte@@PAV1@PAVCRTransform2@@@Z
; class CRMicrophone * __stdcall CRTransform(class CRMicrophone *,class CRTransform3 *)
?CRTransform@@YGPAVCRMicrophone@@PAV1@PAVCRTransform3@@@Z
; class CRPath2 * __stdcall CRTransform(class CRPath2 *,class CRTransform2 *)
?CRTransform@@YGPAVCRPath2@@PAV1@PAVCRTransform2@@@Z
; class CRPoint2 * __stdcall CRTransform(class CRPoint2 *,class CRTransform2 *)
?CRTransform@@YGPAVCRPoint2@@PAV1@PAVCRTransform2@@@Z
; class CRPoint3 * __stdcall CRTransform(class CRPoint3 *,class CRTransform3 *)
?CRTransform@@YGPAVCRPoint3@@PAV1@PAVCRTransform3@@@Z
; class CRVector2 * __stdcall CRTransform(class CRVector2 *,class CRTransform2 *)
?CRTransform@@YGPAVCRVector2@@PAV1@PAVCRTransform2@@@Z
; class CRVector3 * __stdcall CRTransform(class CRVector3 *,class CRTransform3 *)
?CRTransform@@YGPAVCRVector3@@PAV1@PAVCRTransform3@@@Z
; class CRFontStyle * __stdcall CRTransformCharacters(class CRFontStyle *,class CRTransform2 *)
?CRTransformCharacters@@YGPAVCRFontStyle@@PAV1@PAVCRTransform2@@@Z
; class CRImage * __stdcall CRTransformColorRGB(class CRImage *,class CRTransform3 *)
?CRTransformColorRGB@@YGPAVCRImage@@PAV1@PAVCRTransform3@@@Z
; class CRTransform2 * __stdcall CRTranslate2(double,double)
?CRTranslate2@@YGPAVCRTransform2@@NN@Z
; class CRTransform2 * __stdcall CRTranslate2(class CRNumber *,class CRNumber *)
?CRTranslate2@@YGPAVCRTransform2@@PAVCRNumber@@0@Z
; class CRTransform2 * __stdcall CRTranslate2(class CRPoint2 *)
?CRTranslate2@@YGPAVCRTransform2@@PAVCRPoint2@@@Z
; class CRTransform2 * __stdcall CRTranslate2(class CRVector2 *)
?CRTranslate2@@YGPAVCRTransform2@@PAVCRVector2@@@Z
; class CRTransform3 * __stdcall CRTranslate3(double,double,double)
?CRTranslate3@@YGPAVCRTransform3@@NNN@Z
; class CRTransform3 * __stdcall CRTranslate3(class CRNumber *,class CRNumber *,class CRNumber *)
?CRTranslate3@@YGPAVCRTransform3@@PAVCRNumber@@00@Z
; class CRTransform3 * __stdcall CRTranslate3(class CRPoint3 *)
?CRTranslate3@@YGPAVCRTransform3@@PAVCRPoint3@@@Z
; class CRTransform3 * __stdcall CRTranslate3(class CRVector3 *)
?CRTranslate3@@YGPAVCRTransform3@@PAVCRVector3@@@Z
; class CRGeometry * __stdcall CRTriMesh(class TriMeshData &)
?CRTriMesh@@YGPAVCRGeometry@@AAVTriMeshData@@@Z
; bool __stdcall CRTriggerEvent(class CREvent *,class CRBvr *)
?CRTriggerEvent@@YG_NPAVCREvent@@PAVCRBvr@@@Z
; class CRBoolean * __stdcall CRTrue(void)
?CRTrue@@YGPAVCRBoolean@@XZ
; class CRFontStyle * __stdcall CRUnderline(class CRFontStyle *)
?CRUnderline@@YGPAVCRFontStyle@@PAV1@@Z
; class CRGeometry * __stdcall CRUndetectable(class CRGeometry *)
?CRUndetectable@@YGPAVCRGeometry@@PAV1@@Z
; class CRImage * __stdcall CRUndetectable(class CRImage *)
?CRUndetectable@@YGPAVCRImage@@PAV1@@Z
; class CRArray * __stdcall CRUninitializedArray(class CRArray *)
?CRUninitializedArray@@YGPAVCRArray@@PAV1@@Z
; class CRBvr * __stdcall CRUninitializedBvr(enum CR_BVR_TYPEID)
?CRUninitializedBvr@@YGPAVCRBvr@@W4CR_BVR_TYPEID@@@Z
; class CRTuple * __stdcall CRUninitializedTuple(class CRTuple *)
?CRUninitializedTuple@@YGPAVCRTuple@@PAV1@@Z
; class CRGeometry * __stdcall CRUnionGeometry(class CRGeometry *,class CRGeometry *)
?CRUnionGeometry@@YGPAVCRGeometry@@PAV1@0@Z
; class CRGeometry * __stdcall CRUnionGeometry(class CRArray *)
?CRUnionGeometry@@YGPAVCRGeometry@@PAVCRArray@@@Z
; class CRMatte * __stdcall CRUnionMatte(class CRMatte *,class CRMatte *)
?CRUnionMatte@@YGPAVCRMatte@@PAV1@0@Z
; class CRMontage * __stdcall CRUnionMontage(class CRMontage *,class CRMontage *)
?CRUnionMontage@@YGPAVCRMontage@@PAV1@0@Z
; class CRMontage * __stdcall CRUnionMontageArray(class CRArray *)
?CRUnionMontageArray@@YGPAVCRMontage@@PAVCRArray@@@Z
; class CRBvr * __stdcall CRUntil(class CRBvr *,class CREvent *,class CRBvr *)
?CRUntil@@YGPAVCRBvr@@PAV1@PAVCREvent@@0@Z
; class CRBvr * __stdcall CRUntilEx(class CRBvr *,class CREvent *)
?CRUntilEx@@YGPAVCRBvr@@PAV1@PAVCREvent@@@Z
; class CRBvr * __stdcall CRUntilNotify(class CRBvr *,class CREvent *,class CRUntilNotifier *)
?CRUntilNotify@@YGPAVCRBvr@@PAV1@PAVCREvent@@PAVCRUntilNotifier@@@Z
; class CRVector2 * __stdcall CRVector2Polar(double,double)
?CRVector2Polar@@YGPAVCRVector2@@NN@Z
; class CRVector2 * __stdcall CRVector2Polar(class CRNumber *,class CRNumber *)
?CRVector2Polar@@YGPAVCRVector2@@PAVCRNumber@@0@Z
; class CRVector3 * __stdcall CRVector3Spherical(double,double,double)
?CRVector3Spherical@@YGPAVCRVector3@@NNN@Z
; class CRVector3 * __stdcall CRVector3Spherical(class CRNumber *,class CRNumber *,class CRNumber *)
?CRVector3Spherical@@YGPAVCRVector3@@PAVCRNumber@@00@Z
; unsigned short const * __stdcall CRVersionString(void)
?CRVersionString@@YGPBGXZ
; class CRNumber * __stdcall CRViewFrameRate(void)
?CRViewFrameRate@@YGPAVCRNumber@@XZ
; class CRNumber * __stdcall CRViewTimeDelta(void)
?CRViewTimeDelta@@YGPAVCRNumber@@XZ
; class CRFontStyle * __stdcall CRWeight(class CRFontStyle *,double)
?CRWeight@@YGPAVCRFontStyle@@PAV1@N@Z
; class CRFontStyle * __stdcall CRWeight(class CRFontStyle *,class CRNumber *)
?CRWeight@@YGPAVCRFontStyle@@PAV1@PAVCRNumber@@@Z
; class CRColor * __stdcall CRWhite(void)
?CRWhite@@YGPAVCRColor@@XZ
; class CRLineStyle * __stdcall CRWidth(class CRLineStyle *,double)
?CRWidth@@YGPAVCRLineStyle@@PAV1@N@Z
; class CRLineStyle * __stdcall CRWidth(class CRLineStyle *,class CRNumber *)
?CRWidth@@YGPAVCRLineStyle@@PAV1@PAVCRNumber@@@Z
; class CRTransform2 * __stdcall CRXShear2(double)
?CRXShear2@@YGPAVCRTransform2@@N@Z
; class CRTransform2 * __stdcall CRXShear2(class CRNumber *)
?CRXShear2@@YGPAVCRTransform2@@PAVCRNumber@@@Z
; class CRTransform3 * __stdcall CRXShear3(double,double)
?CRXShear3@@YGPAVCRTransform3@@NN@Z
; class CRTransform3 * __stdcall CRXShear3(class CRNumber *,class CRNumber *)
?CRXShear3@@YGPAVCRTransform3@@PAVCRNumber@@0@Z
; class CRVector2 * __stdcall CRXVector2(void)
?CRXVector2@@YGPAVCRVector2@@XZ
; class CRVector3 * __stdcall CRXVector3(void)
?CRXVector3@@YGPAVCRVector3@@XZ
; class CRTransform2 * __stdcall CRYShear2(double)
?CRYShear2@@YGPAVCRTransform2@@N@Z
; class CRTransform2 * __stdcall CRYShear2(class CRNumber *)
?CRYShear2@@YGPAVCRTransform2@@PAVCRNumber@@@Z
; class CRTransform3 * __stdcall CRYShear3(double,double)
?CRYShear3@@YGPAVCRTransform3@@NN@Z
; class CRTransform3 * __stdcall CRYShear3(class CRNumber *,class CRNumber *)
?CRYShear3@@YGPAVCRTransform3@@PAVCRNumber@@0@Z
; class CRVector2 * __stdcall CRYVector2(void)
?CRYVector2@@YGPAVCRVector2@@XZ
; class CRVector3 * __stdcall CRYVector3(void)
?CRYVector3@@YGPAVCRVector3@@XZ
; class CRColor * __stdcall CRYellow(void)
?CRYellow@@YGPAVCRColor@@XZ
; class CRTransform3 * __stdcall CRZShear3(double,double)
?CRZShear3@@YGPAVCRTransform3@@NN@Z
; class CRTransform3 * __stdcall CRZShear3(class CRNumber *,class CRNumber *)
?CRZShear3@@YGPAVCRTransform3@@PAVCRNumber@@0@Z
; class CRVector3 * __stdcall CRZVector3(void)
?CRZVector3@@YGPAVCRVector3@@XZ
; class CRVector2 * __stdcall CRZeroVector2(void)
?CRZeroVector2@@YGPAVCRVector2@@XZ
; class CRVector3 * __stdcall CRZeroVector3(void)
?CRZeroVector3@@YGPAVCRVector3@@XZ
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
